// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sprint.DAL.EFCore.Data;

#nullable disable

namespace Sprint.DAL.EFCore.Migrations
{
    [DbContext(typeof(SprintDbContext))]
    [Migration("20221211195239_RemoveDeletableEntity")]
    partial class RemoveDeletableEntity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0");

            modelBuilder.Entity("Sprint.DAL.EFCore.Models.Court", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("CourtNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("HourlyRate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Courts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("053746b5-1614-4fcf-aedc-c5da932b743e"),
                            CourtNumber = "A",
                            HourlyRate = 1000m,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("019b7176-22b4-428b-92cb-eec114505788"),
                            CourtNumber = "B",
                            HourlyRate = 800m,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("e1608d5e-365c-4e22-b19e-25bc0d65072d"),
                            CourtNumber = "C",
                            HourlyRate = 800m,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("eb949bae-b32c-4d68-a05d-ae4c90e2a745"),
                            CourtNumber = "D",
                            HourlyRate = 500m,
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("Sprint.DAL.EFCore.Models.CourtReservation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CourtId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("From")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("To")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CourtId");

                    b.HasIndex("UserId");

                    b.ToTable("CourtReservations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("be8d181c-a1b6-47e2-bac4-8d7a7a05b433"),
                            CourtId = new Guid("053746b5-1614-4fcf-aedc-c5da932b743e"),
                            Created = new DateTime(2022, 9, 20, 9, 53, 34, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2022, 9, 29, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            To = new DateTime(2022, 9, 29, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("4ab6f34d-8f82-4921-8616-1f9d752406cb")
                        },
                        new
                        {
                            Id = new Guid("678b4158-2691-49e2-9b65-e215a588ffd4"),
                            CourtId = new Guid("e1608d5e-365c-4e22-b19e-25bc0d65072d"),
                            Created = new DateTime(2022, 9, 21, 6, 51, 34, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2022, 9, 30, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            To = new DateTime(2022, 9, 30, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("4ab6f34d-8f82-4921-8616-1f9d752406cb")
                        },
                        new
                        {
                            Id = new Guid("c4f3b80d-8a42-487c-96fa-fbf8e9af5771"),
                            CourtId = new Guid("e1608d5e-365c-4e22-b19e-25bc0d65072d"),
                            Created = new DateTime(2022, 9, 5, 23, 59, 59, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2022, 11, 17, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = true,
                            To = new DateTime(2022, 11, 17, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("4ab6f34d-8f82-4921-8616-1f9d752406cb")
                        },
                        new
                        {
                            Id = new Guid("ab3b26a3-bc38-4a9e-849f-afe30f62c159"),
                            CourtId = new Guid("053746b5-1614-4fcf-aedc-c5da932b743e"),
                            Created = new DateTime(2022, 9, 20, 9, 53, 34, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2022, 9, 29, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            To = new DateTime(2022, 9, 29, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("78445a82-272a-43c6-a094-91ff2062fc2e")
                        },
                        new
                        {
                            Id = new Guid("133a93d8-b322-4327-9561-5c0791947454"),
                            CourtId = new Guid("053746b5-1614-4fcf-aedc-c5da932b743e"),
                            Created = new DateTime(2022, 9, 28, 19, 19, 19, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2022, 10, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            To = new DateTime(2022, 10, 1, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("78445a82-272a-43c6-a094-91ff2062fc2e")
                        },
                        new
                        {
                            Id = new Guid("9c0faca5-3bdf-4d9b-8bb6-115ba4e023d7"),
                            CourtId = new Guid("019b7176-22b4-428b-92cb-eec114505788"),
                            Created = new DateTime(2022, 9, 15, 18, 4, 4, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2022, 9, 16, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            To = new DateTime(2022, 9, 16, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("663a1513-dd61-454f-8f73-151a18659136")
                        },
                        new
                        {
                            Id = new Guid("b2f0a633-209a-4380-8eee-f44df3a411ff"),
                            CourtId = new Guid("019b7176-22b4-428b-92cb-eec114505788"),
                            Created = new DateTime(2022, 9, 16, 9, 53, 34, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2022, 9, 17, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = true,
                            To = new DateTime(2022, 9, 17, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("663a1513-dd61-454f-8f73-151a18659136")
                        },
                        new
                        {
                            Id = new Guid("9bc07151-0c8d-4644-a40a-a641f4abf4f1"),
                            CourtId = new Guid("eb949bae-b32c-4d68-a05d-ae4c90e2a745"),
                            Created = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2022, 12, 31, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            To = new DateTime(2022, 12, 31, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("1f83a261-04ca-41ac-88c4-736e2cd2905d")
                        });
                });

            modelBuilder.Entity("Sprint.DAL.EFCore.Models.Trainer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("HourlyRate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Trainers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e845ff5f-c15f-4b7b-80d0-0e1007509182"),
                            Description = "I know how to play, that's all",
                            HourlyRate = 2000m,
                            IsDeleted = false,
                            UserId = new Guid("803b7f74-4c34-4024-ba0c-1d23902bf815")
                        },
                        new
                        {
                            Id = new Guid("7e6e363b-bb24-45e3-bf6f-1362148a2cfd"),
                            Description = "I know how to play even better, that's all",
                            HourlyRate = 3485m,
                            IsDeleted = false,
                            UserId = new Guid("b8e71e32-8144-4a9d-b6a1-e30ff73ea570")
                        });
                });

            modelBuilder.Entity("Sprint.DAL.EFCore.Models.TrainerPhoto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Hide")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TrainerId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TrainerId");

                    b.ToTable("TrainerPhotos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3db35716-5ad4-4b5f-81ba-5b6d126a2c42"),
                            Hide = false,
                            IsDeleted = false,
                            Path = "tbd",
                            TrainerId = new Guid("e845ff5f-c15f-4b7b-80d0-0e1007509182")
                        },
                        new
                        {
                            Id = new Guid("7ee87a44-cd5c-47ac-8f3a-77c44bffbc18"),
                            Hide = false,
                            IsDeleted = false,
                            Path = "tbd",
                            TrainerId = new Guid("e845ff5f-c15f-4b7b-80d0-0e1007509182")
                        },
                        new
                        {
                            Id = new Guid("cc3eea02-bf82-49cc-95ac-17189f9bba90"),
                            Hide = true,
                            IsDeleted = false,
                            Path = "tbd",
                            TrainerId = new Guid("7e6e363b-bb24-45e3-bf6f-1362148a2cfd")
                        },
                        new
                        {
                            Id = new Guid("1df958f8-0f56-4e4f-95e8-2bc0e7ed47f5"),
                            Hide = true,
                            IsDeleted = false,
                            Path = "tbd",
                            TrainerId = new Guid("7e6e363b-bb24-45e3-bf6f-1362148a2cfd")
                        });
                });

            modelBuilder.Entity("Sprint.DAL.EFCore.Models.TrainerReservation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CourtReservationId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("TrainerId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CourtReservationId")
                        .IsUnique();

                    b.HasIndex("TrainerId");

                    b.ToTable("TrainerReservations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8359f2ab-82c2-460f-8c03-fc0354bcc244"),
                            CourtReservationId = new Guid("b2f0a633-209a-4380-8eee-f44df3a411ff"),
                            IsDeleted = true,
                            TrainerId = new Guid("e845ff5f-c15f-4b7b-80d0-0e1007509182")
                        },
                        new
                        {
                            Id = new Guid("32533c67-87f3-4a52-b720-063a663cbe56"),
                            CourtReservationId = new Guid("9c0faca5-3bdf-4d9b-8bb6-115ba4e023d7"),
                            IsDeleted = false,
                            TrainerId = new Guid("e845ff5f-c15f-4b7b-80d0-0e1007509182")
                        },
                        new
                        {
                            Id = new Guid("f90e7507-5e95-4d20-b090-879b3a95ddee"),
                            CourtReservationId = new Guid("9bc07151-0c8d-4644-a40a-a641f4abf4f1"),
                            IsDeleted = false,
                            TrainerId = new Guid("7e6e363b-bb24-45e3-bf6f-1362148a2cfd")
                        });
                });

            modelBuilder.Entity("Sprint.DAL.EFCore.Models.TrainerReview", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Hide")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Rating")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("ReservationId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ReservationId")
                        .IsUnique();

                    b.ToTable("TrainerReviews");

                    b.HasData(
                        new
                        {
                            Id = new Guid("db10c392-4c38-49bb-baaa-bee266959084"),
                            Hide = false,
                            IsDeleted = false,
                            Rating = 5,
                            ReservationId = new Guid("f90e7507-5e95-4d20-b090-879b3a95ddee"),
                            Text = "tbd"
                        });
                });

            modelBuilder.Entity("Sprint.DAL.EFCore.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsTrainer")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhotoPath")
                        .HasColumnType("TEXT");

                    b.Property<int>("Role")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SecurityStamp")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4ab6f34d-8f82-4921-8616-1f9d752406cb"),
                            DateOfBirth = new DateTime(2001, 5, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "514329@mail.muni.cz",
                            FirstName = "Adam",
                            IsDeleted = false,
                            IsTrainer = false,
                            LastName = "Mydla",
                            PasswordHash = "tbd",
                            PhotoPath = "tbd",
                            Role = 0,
                            SecurityStamp = "1abcdef"
                        },
                        new
                        {
                            Id = new Guid("78445a82-272a-43c6-a094-91ff2062fc2e"),
                            DateOfBirth = new DateTime(1995, 5, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "pppeter@nonexistentmail.com",
                            FirstName = "Peter",
                            IsDeleted = false,
                            IsTrainer = false,
                            LastName = "Griffin",
                            PasswordHash = "tbd",
                            PhotoPath = "tbd",
                            Role = 0,
                            SecurityStamp = "2abcdef"
                        },
                        new
                        {
                            Id = new Guid("1f83a261-04ca-41ac-88c4-736e2cd2905d"),
                            DateOfBirth = new DateTime(1955, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "monic@nonexistentmail.com",
                            FirstName = "Monica",
                            IsDeleted = false,
                            IsTrainer = false,
                            LastName = "Bellucci",
                            PasswordHash = "tbd",
                            PhotoPath = "tbd",
                            Role = 0,
                            SecurityStamp = "4abcdef"
                        },
                        new
                        {
                            Id = new Guid("663a1513-dd61-454f-8f73-151a18659136"),
                            DateOfBirth = new DateTime(1993, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "rntr@nonexistentmail.com",
                            FirstName = "Roman",
                            IsDeleted = false,
                            IsTrainer = false,
                            LastName = "NieTenRoman",
                            PasswordHash = "tbd",
                            PhotoPath = "tbd",
                            Role = 0,
                            SecurityStamp = "3abcdef"
                        },
                        new
                        {
                            Id = new Guid("803b7f74-4c34-4024-ba0c-1d23902bf815"),
                            DateOfBirth = new DateTime(1995, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "rhanculak@mail.muni.cz",
                            FirstName = "Radovan",
                            IsDeleted = false,
                            IsTrainer = true,
                            LastName = "Hančuľák",
                            PasswordHash = "tbd",
                            PhotoPath = "tbd",
                            Role = 1,
                            SecurityStamp = "5abcdef"
                        },
                        new
                        {
                            Id = new Guid("b8e71e32-8144-4a9d-b6a1-e30ff73ea570"),
                            DateOfBirth = new DateTime(1995, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "493352@mail.muni.cz",
                            FirstName = "Jitka",
                            IsDeleted = false,
                            IsTrainer = true,
                            LastName = "Viceníková",
                            PasswordHash = "tbd",
                            PhotoPath = "tbd",
                            Role = 1,
                            SecurityStamp = "6abcdef"
                        });
                });

            modelBuilder.Entity("Sprint.DAL.EFCore.Models.CourtReservation", b =>
                {
                    b.HasOne("Sprint.DAL.EFCore.Models.Court", "Court")
                        .WithMany("Reservations")
                        .HasForeignKey("CourtId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sprint.DAL.EFCore.Models.User", "User")
                        .WithMany("CourtReservations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Court");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Sprint.DAL.EFCore.Models.Trainer", b =>
                {
                    b.HasOne("Sprint.DAL.EFCore.Models.User", "User")
                        .WithOne("Trainer")
                        .HasForeignKey("Sprint.DAL.EFCore.Models.Trainer", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Sprint.DAL.EFCore.Models.TrainerPhoto", b =>
                {
                    b.HasOne("Sprint.DAL.EFCore.Models.Trainer", "Trainer")
                        .WithMany("Photos")
                        .HasForeignKey("TrainerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trainer");
                });

            modelBuilder.Entity("Sprint.DAL.EFCore.Models.TrainerReservation", b =>
                {
                    b.HasOne("Sprint.DAL.EFCore.Models.CourtReservation", "CourtReservation")
                        .WithOne("TrainerReservation")
                        .HasForeignKey("Sprint.DAL.EFCore.Models.TrainerReservation", "CourtReservationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sprint.DAL.EFCore.Models.Trainer", "Trainer")
                        .WithMany("Reservations")
                        .HasForeignKey("TrainerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CourtReservation");

                    b.Navigation("Trainer");
                });

            modelBuilder.Entity("Sprint.DAL.EFCore.Models.TrainerReview", b =>
                {
                    b.HasOne("Sprint.DAL.EFCore.Models.TrainerReservation", "Reservation")
                        .WithOne("TrainerReview")
                        .HasForeignKey("Sprint.DAL.EFCore.Models.TrainerReview", "ReservationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("Sprint.DAL.EFCore.Models.Court", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("Sprint.DAL.EFCore.Models.CourtReservation", b =>
                {
                    b.Navigation("TrainerReservation");
                });

            modelBuilder.Entity("Sprint.DAL.EFCore.Models.Trainer", b =>
                {
                    b.Navigation("Photos");

                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("Sprint.DAL.EFCore.Models.TrainerReservation", b =>
                {
                    b.Navigation("TrainerReview");
                });

            modelBuilder.Entity("Sprint.DAL.EFCore.Models.User", b =>
                {
                    b.Navigation("CourtReservations");

                    b.Navigation("Trainer");
                });
#pragma warning restore 612, 618
        }
    }
}
