// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sprint.DAL.EFCore.Data;

#nullable disable

namespace Sprint.DAL.EFCore.Migrations
{
    [DbContext(typeof(SprintDbContext))]
    [Migration("20221218133328_AddTrainerPhotos")]
    partial class AddTrainerPhotos
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0");

            modelBuilder.Entity("Sprint.DAL.EFCore.Models.Court", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("CourtNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("HourlyRate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Courts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("aa6390dc-ed52-42c6-9236-99036b9f040f"),
                            CourtNumber = "A",
                            HourlyRate = 1000m,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("ee427533-5658-4ccf-86e5-c82943ee84db"),
                            CourtNumber = "B",
                            HourlyRate = 800m,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("875fd8d9-3ae2-4222-bd4a-d0189c2a71d1"),
                            CourtNumber = "C",
                            HourlyRate = 800m,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("ec858b0b-f861-45d4-8371-edd21d5fc799"),
                            CourtNumber = "D",
                            HourlyRate = 500m,
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("Sprint.DAL.EFCore.Models.CourtReservation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CourtId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("From")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("To")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CourtId");

                    b.HasIndex("UserId");

                    b.ToTable("CourtReservations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("515d5846-4665-488f-a006-516721b6634a"),
                            CourtId = new Guid("aa6390dc-ed52-42c6-9236-99036b9f040f"),
                            Created = new DateTime(2022, 9, 20, 9, 53, 34, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2022, 9, 29, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            To = new DateTime(2022, 9, 29, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("1274d0bc-b6d7-46b0-9f56-9d391735f941")
                        },
                        new
                        {
                            Id = new Guid("dbbcf2b0-3e08-42ad-8317-fbb6f6c25983"),
                            CourtId = new Guid("875fd8d9-3ae2-4222-bd4a-d0189c2a71d1"),
                            Created = new DateTime(2022, 9, 21, 6, 51, 34, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2022, 9, 30, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            To = new DateTime(2022, 9, 30, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("1274d0bc-b6d7-46b0-9f56-9d391735f941")
                        },
                        new
                        {
                            Id = new Guid("4e838456-4c35-4b7d-8fb2-cfe3f6634f61"),
                            CourtId = new Guid("875fd8d9-3ae2-4222-bd4a-d0189c2a71d1"),
                            Created = new DateTime(2022, 9, 5, 23, 59, 59, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2022, 11, 17, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = true,
                            To = new DateTime(2022, 11, 17, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("1274d0bc-b6d7-46b0-9f56-9d391735f941")
                        },
                        new
                        {
                            Id = new Guid("bb58669b-d6bb-45d5-9c9d-966ef6b9e44d"),
                            CourtId = new Guid("aa6390dc-ed52-42c6-9236-99036b9f040f"),
                            Created = new DateTime(2022, 9, 20, 9, 53, 34, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2022, 9, 29, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            To = new DateTime(2022, 9, 29, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("1e0182e3-ae8a-485c-9b90-32e1379baa3d")
                        },
                        new
                        {
                            Id = new Guid("f8b5b07a-1a89-430a-9f67-55ac17d723e6"),
                            CourtId = new Guid("aa6390dc-ed52-42c6-9236-99036b9f040f"),
                            Created = new DateTime(2022, 9, 28, 19, 19, 19, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2022, 10, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            To = new DateTime(2022, 10, 1, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("1e0182e3-ae8a-485c-9b90-32e1379baa3d")
                        },
                        new
                        {
                            Id = new Guid("3cee9034-dfa2-41a2-a116-59333f220322"),
                            CourtId = new Guid("ee427533-5658-4ccf-86e5-c82943ee84db"),
                            Created = new DateTime(2022, 9, 15, 18, 4, 4, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2022, 9, 16, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            To = new DateTime(2022, 9, 16, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("10bbd36f-8a70-406b-8fcf-df8e177603f6")
                        },
                        new
                        {
                            Id = new Guid("9859b4f8-5904-4b9a-b203-1fb7f1f36b99"),
                            CourtId = new Guid("ee427533-5658-4ccf-86e5-c82943ee84db"),
                            Created = new DateTime(2022, 9, 16, 9, 53, 34, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2022, 9, 17, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = true,
                            To = new DateTime(2022, 9, 17, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("10bbd36f-8a70-406b-8fcf-df8e177603f6")
                        },
                        new
                        {
                            Id = new Guid("070f1d3f-7487-4ec3-b22c-7d66eade90f1"),
                            CourtId = new Guid("ec858b0b-f861-45d4-8371-edd21d5fc799"),
                            Created = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2022, 12, 31, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            To = new DateTime(2022, 12, 31, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("b3c7c975-7dc0-4486-a3c4-524201624fca")
                        });
                });

            modelBuilder.Entity("Sprint.DAL.EFCore.Models.Trainer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("HourlyRate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Trainers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d7c4b238-88d2-4456-a6f9-1fc5cd29509a"),
                            Description = "I know how to play, that's all",
                            HourlyRate = 2000m,
                            IsDeleted = false,
                            UserId = new Guid("f4d2804f-6008-42f2-b243-8d0ead61d6f1")
                        },
                        new
                        {
                            Id = new Guid("257b8445-2cfa-4772-9fc8-1c74036cca7b"),
                            Description = "I know how to play even better, that's all",
                            HourlyRate = 3485m,
                            IsDeleted = false,
                            UserId = new Guid("d40b6b29-f87c-4384-87da-34151d9ab66b")
                        });
                });

            modelBuilder.Entity("Sprint.DAL.EFCore.Models.TrainerPhoto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Hide")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TrainerId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TrainerId");

                    b.ToTable("TrainerPhotos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1964a3db-35a1-490d-a25e-556eed5911a4"),
                            Hide = false,
                            IsDeleted = false,
                            Path = "https://static8.depositphotos.com/1460388/938/i/600/depositphotos_9388060-stock-photo-next-rally.jpg",
                            TrainerId = new Guid("d7c4b238-88d2-4456-a6f9-1fc5cd29509a")
                        },
                        new
                        {
                            Id = new Guid("667a3650-62da-497d-a165-d7b627eddf3c"),
                            Hide = false,
                            IsDeleted = false,
                            Path = "https://static8.depositphotos.com/1460388/938/i/600/depositphotos_9388060-stock-photo-next-rally.jpg",
                            TrainerId = new Guid("d7c4b238-88d2-4456-a6f9-1fc5cd29509a")
                        },
                        new
                        {
                            Id = new Guid("1637b7ee-e801-4631-92c6-8efb0439f489"),
                            Hide = true,
                            IsDeleted = false,
                            Path = "https://static8.depositphotos.com/1460388/938/i/600/depositphotos_9388060-stock-photo-next-rally.jpg",
                            TrainerId = new Guid("257b8445-2cfa-4772-9fc8-1c74036cca7b")
                        },
                        new
                        {
                            Id = new Guid("b19a07ab-30c8-4a88-86fe-b49616d0ed13"),
                            Hide = true,
                            IsDeleted = false,
                            Path = "https://static8.depositphotos.com/1460388/938/i/600/depositphotos_9388060-stock-photo-next-rally.jpg",
                            TrainerId = new Guid("257b8445-2cfa-4772-9fc8-1c74036cca7b")
                        });
                });

            modelBuilder.Entity("Sprint.DAL.EFCore.Models.TrainerReservation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CourtReservationId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("TrainerId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CourtReservationId")
                        .IsUnique();

                    b.HasIndex("TrainerId");

                    b.ToTable("TrainerReservations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bb86baaa-e685-498d-916d-695b0fc84f92"),
                            CourtReservationId = new Guid("9859b4f8-5904-4b9a-b203-1fb7f1f36b99"),
                            IsDeleted = true,
                            TrainerId = new Guid("d7c4b238-88d2-4456-a6f9-1fc5cd29509a")
                        },
                        new
                        {
                            Id = new Guid("47eed06c-351b-4bf0-b026-a3b0add3c871"),
                            CourtReservationId = new Guid("3cee9034-dfa2-41a2-a116-59333f220322"),
                            IsDeleted = false,
                            TrainerId = new Guid("d7c4b238-88d2-4456-a6f9-1fc5cd29509a")
                        },
                        new
                        {
                            Id = new Guid("162b630a-644b-428c-a4df-865de13277e4"),
                            CourtReservationId = new Guid("070f1d3f-7487-4ec3-b22c-7d66eade90f1"),
                            IsDeleted = false,
                            TrainerId = new Guid("257b8445-2cfa-4772-9fc8-1c74036cca7b")
                        });
                });

            modelBuilder.Entity("Sprint.DAL.EFCore.Models.TrainerReview", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Hide")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Rating")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("ReservationId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ReservationId")
                        .IsUnique();

                    b.ToTable("TrainerReviews");

                    b.HasData(
                        new
                        {
                            Id = new Guid("068db159-977b-4d28-8067-1c40840299d4"),
                            Hide = false,
                            IsDeleted = false,
                            Rating = 5,
                            ReservationId = new Guid("162b630a-644b-428c-a4df-865de13277e4"),
                            Text = "Awesome!"
                        });
                });

            modelBuilder.Entity("Sprint.DAL.EFCore.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsTrainer")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhotoPath")
                        .HasColumnType("TEXT");

                    b.Property<int>("Role")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SecurityStamp")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1274d0bc-b6d7-46b0-9f56-9d391735f941"),
                            DateOfBirth = new DateTime(2001, 5, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "514329@mail.muni.cz",
                            FirstName = "Adam",
                            IsDeleted = false,
                            IsTrainer = false,
                            LastName = "Mydla",
                            PasswordHash = "AQAAAAEAACcQAAAAEHJNzc74MClYcrnmRa5hjbMdWsPhr1E4FMkrPTJvDaYId7MDVwvXrPlsnOv6dZS7xg==",
                            PhotoPath = "https://img3.stockfresh.com/files/w/wavebreak_media/m/12/8944331_stock-photo-badminton-player-holding-racket-and-shuttlecock.jpg",
                            Role = 0,
                            SecurityStamp = "1abcdef"
                        },
                        new
                        {
                            Id = new Guid("1e0182e3-ae8a-485c-9b90-32e1379baa3d"),
                            DateOfBirth = new DateTime(1995, 5, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "pppeter@nonexistentmail.com",
                            FirstName = "Peter",
                            IsDeleted = false,
                            IsTrainer = false,
                            LastName = "Griffin",
                            PasswordHash = "AQAAAAEAACcQAAAAEHJNzc74MClYcrnmRa5hjbMdWsPhr1E4FMkrPTJvDaYId7MDVwvXrPlsnOv6dZS7xg==",
                            PhotoPath = "https://img3.stockfresh.com/files/w/wavebreak_media/m/12/8944331_stock-photo-badminton-player-holding-racket-and-shuttlecock.jpg",
                            Role = 0,
                            SecurityStamp = "2abcdef"
                        },
                        new
                        {
                            Id = new Guid("b3c7c975-7dc0-4486-a3c4-524201624fca"),
                            DateOfBirth = new DateTime(1955, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "monic@nonexistentmail.com",
                            FirstName = "Monica",
                            IsDeleted = false,
                            IsTrainer = false,
                            LastName = "Bellucci",
                            PasswordHash = "AQAAAAEAACcQAAAAEHJNzc74MClYcrnmRa5hjbMdWsPhr1E4FMkrPTJvDaYId7MDVwvXrPlsnOv6dZS7xg==",
                            PhotoPath = "https://img3.stockfresh.com/files/w/wavebreak_media/m/12/8944331_stock-photo-badminton-player-holding-racket-and-shuttlecock.jpg",
                            Role = 0,
                            SecurityStamp = "4abcdef"
                        },
                        new
                        {
                            Id = new Guid("10bbd36f-8a70-406b-8fcf-df8e177603f6"),
                            DateOfBirth = new DateTime(1993, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "rntr@nonexistentmail.com",
                            FirstName = "Roman",
                            IsDeleted = false,
                            IsTrainer = false,
                            LastName = "NieTenRoman",
                            PasswordHash = "AQAAAAEAACcQAAAAEHJNzc74MClYcrnmRa5hjbMdWsPhr1E4FMkrPTJvDaYId7MDVwvXrPlsnOv6dZS7xg==",
                            PhotoPath = "https://img3.stockfresh.com/files/w/wavebreak_media/m/12/8944331_stock-photo-badminton-player-holding-racket-and-shuttlecock.jpg",
                            Role = 0,
                            SecurityStamp = "3abcdef"
                        },
                        new
                        {
                            Id = new Guid("f4d2804f-6008-42f2-b243-8d0ead61d6f1"),
                            DateOfBirth = new DateTime(1995, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "rhanculak@mail.muni.cz",
                            FirstName = "Radovan",
                            IsDeleted = false,
                            IsTrainer = true,
                            LastName = "Hančuľák",
                            PasswordHash = "AQAAAAEAACcQAAAAEHJNzc74MClYcrnmRa5hjbMdWsPhr1E4FMkrPTJvDaYId7MDVwvXrPlsnOv6dZS7xg==",
                            PhotoPath = "https://img3.stockfresh.com/files/w/wavebreak_media/m/12/8944331_stock-photo-badminton-player-holding-racket-and-shuttlecock.jpg",
                            Role = 1,
                            SecurityStamp = "5abcdef"
                        },
                        new
                        {
                            Id = new Guid("d40b6b29-f87c-4384-87da-34151d9ab66b"),
                            DateOfBirth = new DateTime(1995, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "493352@mail.muni.cz",
                            FirstName = "Jitka",
                            IsDeleted = false,
                            IsTrainer = true,
                            LastName = "Viceníková",
                            PasswordHash = "AQAAAAEAACcQAAAAEHJNzc74MClYcrnmRa5hjbMdWsPhr1E4FMkrPTJvDaYId7MDVwvXrPlsnOv6dZS7xg==",
                            PhotoPath = "https://img3.stockfresh.com/files/w/wavebreak_media/m/12/8944331_stock-photo-badminton-player-holding-racket-and-shuttlecock.jpg",
                            Role = 1,
                            SecurityStamp = "6abcdef"
                        },
                        new
                        {
                            Id = new Guid("6c8d8a53-f5ac-4fea-b0da-d19d05d4784d"),
                            DateOfBirth = new DateTime(1995, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admin@sprint.cz",
                            FirstName = "Admin",
                            IsDeleted = false,
                            IsTrainer = true,
                            LastName = "Admin",
                            PasswordHash = "AQAAAAEAACcQAAAAEHJNzc74MClYcrnmRa5hjbMdWsPhr1E4FMkrPTJvDaYId7MDVwvXrPlsnOv6dZS7xg==",
                            PhotoPath = "https://img3.stockfresh.com/files/w/wavebreak_media/m/12/8944331_stock-photo-badminton-player-holding-racket-and-shuttlecock.jpg",
                            Role = 1,
                            SecurityStamp = "6abcdef"
                        });
                });

            modelBuilder.Entity("Sprint.DAL.EFCore.Models.CourtReservation", b =>
                {
                    b.HasOne("Sprint.DAL.EFCore.Models.Court", "Court")
                        .WithMany("Reservations")
                        .HasForeignKey("CourtId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sprint.DAL.EFCore.Models.User", "User")
                        .WithMany("CourtReservations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Court");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Sprint.DAL.EFCore.Models.Trainer", b =>
                {
                    b.HasOne("Sprint.DAL.EFCore.Models.User", "User")
                        .WithOne("Trainer")
                        .HasForeignKey("Sprint.DAL.EFCore.Models.Trainer", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Sprint.DAL.EFCore.Models.TrainerPhoto", b =>
                {
                    b.HasOne("Sprint.DAL.EFCore.Models.Trainer", "Trainer")
                        .WithMany("Photos")
                        .HasForeignKey("TrainerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trainer");
                });

            modelBuilder.Entity("Sprint.DAL.EFCore.Models.TrainerReservation", b =>
                {
                    b.HasOne("Sprint.DAL.EFCore.Models.CourtReservation", "CourtReservation")
                        .WithOne("TrainerReservation")
                        .HasForeignKey("Sprint.DAL.EFCore.Models.TrainerReservation", "CourtReservationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sprint.DAL.EFCore.Models.Trainer", "Trainer")
                        .WithMany("Reservations")
                        .HasForeignKey("TrainerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CourtReservation");

                    b.Navigation("Trainer");
                });

            modelBuilder.Entity("Sprint.DAL.EFCore.Models.TrainerReview", b =>
                {
                    b.HasOne("Sprint.DAL.EFCore.Models.TrainerReservation", "Reservation")
                        .WithOne("TrainerReview")
                        .HasForeignKey("Sprint.DAL.EFCore.Models.TrainerReview", "ReservationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("Sprint.DAL.EFCore.Models.Court", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("Sprint.DAL.EFCore.Models.CourtReservation", b =>
                {
                    b.Navigation("TrainerReservation");
                });

            modelBuilder.Entity("Sprint.DAL.EFCore.Models.Trainer", b =>
                {
                    b.Navigation("Photos");

                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("Sprint.DAL.EFCore.Models.TrainerReservation", b =>
                {
                    b.Navigation("TrainerReview");
                });

            modelBuilder.Entity("Sprint.DAL.EFCore.Models.User", b =>
                {
                    b.Navigation("CourtReservations");

                    b.Navigation("Trainer");
                });
#pragma warning restore 612, 618
        }
    }
}
