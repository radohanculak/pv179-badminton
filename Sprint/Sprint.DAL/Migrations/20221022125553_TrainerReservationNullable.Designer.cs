// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sprint.DAL.EFCore.Data;

#nullable disable

namespace Sprint.DAL.EFCore.Migrations
{
    [DbContext(typeof(SprintDbContext))]
    [Migration("20221022125553_TrainerReservationNullable")]
    partial class TrainerReservationNullable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.9");

            modelBuilder.Entity("Sprint.DAL.EFCore.Models.Court", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("CourtNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("HourlyRate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Courts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6792ae3c-0596-4c98-afa8-62a10328699c"),
                            CourtNumber = "A",
                            HourlyRate = 1000m
                        },
                        new
                        {
                            Id = new Guid("d32f674b-b085-4a1a-8dbb-697aa84e6f02"),
                            CourtNumber = "B",
                            HourlyRate = 800m
                        },
                        new
                        {
                            Id = new Guid("76446349-19ef-493a-8c2f-558c108141c7"),
                            CourtNumber = "C",
                            HourlyRate = 800m
                        },
                        new
                        {
                            Id = new Guid("ef270c54-2e51-4f69-98c1-a4d9cf545b5d"),
                            CourtNumber = "D",
                            HourlyRate = 500m
                        });
                });

            modelBuilder.Entity("Sprint.DAL.EFCore.Models.CourtReservation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CourtId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("From")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("To")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CourtId");

                    b.HasIndex("UserId");

                    b.ToTable("CourtReservations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d1431fb7-2ae3-4846-9c20-89390fa1139e"),
                            CourtId = new Guid("6792ae3c-0596-4c98-afa8-62a10328699c"),
                            Created = new DateTime(2022, 9, 20, 9, 53, 34, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2022, 9, 29, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            To = new DateTime(2022, 9, 29, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("6a8d8811-ae70-4eae-ba41-00afbe732027")
                        },
                        new
                        {
                            Id = new Guid("8220d240-e4aa-4a0b-b3b7-5229be81cc87"),
                            CourtId = new Guid("76446349-19ef-493a-8c2f-558c108141c7"),
                            Created = new DateTime(2022, 9, 21, 6, 51, 34, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2022, 9, 30, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            To = new DateTime(2022, 9, 30, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("6a8d8811-ae70-4eae-ba41-00afbe732027")
                        },
                        new
                        {
                            Id = new Guid("baf0afaa-617a-43c5-853b-32188b7fd063"),
                            CourtId = new Guid("76446349-19ef-493a-8c2f-558c108141c7"),
                            Created = new DateTime(2022, 9, 5, 23, 59, 59, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2022, 11, 17, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = true,
                            To = new DateTime(2022, 11, 17, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("6a8d8811-ae70-4eae-ba41-00afbe732027")
                        },
                        new
                        {
                            Id = new Guid("29ba6e9c-d92e-4f62-8d43-06f5d9d5c657"),
                            CourtId = new Guid("6792ae3c-0596-4c98-afa8-62a10328699c"),
                            Created = new DateTime(2022, 9, 20, 9, 53, 34, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2022, 9, 29, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            To = new DateTime(2022, 9, 29, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("075079f9-6862-4add-ba49-50d5153041c1")
                        },
                        new
                        {
                            Id = new Guid("5e2cb3f5-1225-45e6-aa71-99998f1b8841"),
                            CourtId = new Guid("6792ae3c-0596-4c98-afa8-62a10328699c"),
                            Created = new DateTime(2022, 9, 28, 19, 19, 19, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2022, 10, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            To = new DateTime(2022, 10, 1, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("075079f9-6862-4add-ba49-50d5153041c1")
                        },
                        new
                        {
                            Id = new Guid("7ab3bdc6-0531-452d-92dc-cac9bde1795a"),
                            CourtId = new Guid("d32f674b-b085-4a1a-8dbb-697aa84e6f02"),
                            Created = new DateTime(2022, 9, 15, 18, 4, 4, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2022, 9, 16, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            To = new DateTime(2022, 9, 16, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("98696623-e7cd-4dd5-81ad-c22d2a474430")
                        },
                        new
                        {
                            Id = new Guid("0fdba66e-ff82-47b3-b9e2-b197e1089aa6"),
                            CourtId = new Guid("d32f674b-b085-4a1a-8dbb-697aa84e6f02"),
                            Created = new DateTime(2022, 9, 16, 9, 53, 34, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2022, 9, 17, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = true,
                            To = new DateTime(2022, 9, 17, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("98696623-e7cd-4dd5-81ad-c22d2a474430")
                        },
                        new
                        {
                            Id = new Guid("88874f66-239d-427e-a2b6-824ae8286480"),
                            CourtId = new Guid("ef270c54-2e51-4f69-98c1-a4d9cf545b5d"),
                            Created = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2022, 12, 31, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            To = new DateTime(2022, 12, 31, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("193c98e9-c95c-4753-89fe-058cdb68bfc6")
                        });
                });

            modelBuilder.Entity("Sprint.DAL.EFCore.Models.Trainer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("HourlyRate")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Trainers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("833ec7e0-3ea7-412f-836d-2da8eb4723f8"),
                            Description = "I know how to play, that's all",
                            Email = "rhanculak@mail.muni.cz",
                            FirstName = "Radovan",
                            HourlyRate = 2000m,
                            LastName = "Hančuľák",
                            PasswordHash = "tbd"
                        },
                        new
                        {
                            Id = new Guid("2a5dae96-92b3-47b1-8022-fcfe46c47077"),
                            Description = "I know how to play even better, that's all",
                            Email = "493352@mail.muni.cz",
                            FirstName = "Jitka",
                            HourlyRate = 3485m,
                            LastName = "Viceníková",
                            PasswordHash = "tbd"
                        });
                });

            modelBuilder.Entity("Sprint.DAL.EFCore.Models.TrainerPhoto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Hide")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TrainerId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TrainerId");

                    b.ToTable("TrainerPhotos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cccc8c38-0009-4b8c-b9fc-6b0005186448"),
                            Hide = false,
                            Path = "tbd",
                            TrainerId = new Guid("833ec7e0-3ea7-412f-836d-2da8eb4723f8")
                        },
                        new
                        {
                            Id = new Guid("a21bde57-916b-407c-a621-54fdefc83040"),
                            Hide = false,
                            Path = "tbd",
                            TrainerId = new Guid("833ec7e0-3ea7-412f-836d-2da8eb4723f8")
                        },
                        new
                        {
                            Id = new Guid("c3adc5d4-7917-4d99-868d-a92af88744f8"),
                            Hide = true,
                            Path = "tbd",
                            TrainerId = new Guid("2a5dae96-92b3-47b1-8022-fcfe46c47077")
                        },
                        new
                        {
                            Id = new Guid("dfb1b6eb-631e-4fbc-86af-9cad756d8e8c"),
                            Hide = true,
                            Path = "tbd",
                            TrainerId = new Guid("2a5dae96-92b3-47b1-8022-fcfe46c47077")
                        });
                });

            modelBuilder.Entity("Sprint.DAL.EFCore.Models.TrainerReservation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CourtReservationId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("TrainerId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("TrainerReviewId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CourtReservationId")
                        .IsUnique();

                    b.HasIndex("TrainerId");

                    b.HasIndex("TrainerReviewId");

                    b.ToTable("TrainerReservations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d97ea249-5864-4e1d-9ec3-930646f08278"),
                            CourtReservationId = new Guid("0fdba66e-ff82-47b3-b9e2-b197e1089aa6"),
                            IsDeleted = true,
                            TrainerId = new Guid("833ec7e0-3ea7-412f-836d-2da8eb4723f8")
                        },
                        new
                        {
                            Id = new Guid("c626b9d5-0d52-40af-a876-afdf9b60beee"),
                            CourtReservationId = new Guid("7ab3bdc6-0531-452d-92dc-cac9bde1795a"),
                            IsDeleted = false,
                            TrainerId = new Guid("833ec7e0-3ea7-412f-836d-2da8eb4723f8")
                        },
                        new
                        {
                            Id = new Guid("51dd425b-3185-4746-bc83-5f5905dd61b2"),
                            CourtReservationId = new Guid("88874f66-239d-427e-a2b6-824ae8286480"),
                            IsDeleted = false,
                            TrainerId = new Guid("2a5dae96-92b3-47b1-8022-fcfe46c47077"),
                            TrainerReviewId = new Guid("29438a1f-056c-4186-bbc6-70c35d9e0f46")
                        });
                });

            modelBuilder.Entity("Sprint.DAL.EFCore.Models.TrainerReview", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Hide")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Rating")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TrainerReviews");

                    b.HasData(
                        new
                        {
                            Id = new Guid("29438a1f-056c-4186-bbc6-70c35d9e0f46"),
                            Hide = false,
                            Rating = 5,
                            Text = "tbd"
                        });
                });

            modelBuilder.Entity("Sprint.DAL.EFCore.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhotoPath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6a8d8811-ae70-4eae-ba41-00afbe732027"),
                            DateOfBirth = new DateTime(2001, 5, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "514329@mail.muni.cz",
                            FirstName = "Adam",
                            LastName = "Mydla",
                            PasswordHash = "tbd",
                            PhotoPath = "tbd"
                        },
                        new
                        {
                            Id = new Guid("075079f9-6862-4add-ba49-50d5153041c1"),
                            DateOfBirth = new DateTime(1995, 5, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "pppeter@nonexistentmail.com",
                            FirstName = "Peter",
                            LastName = "Griffin",
                            PasswordHash = "tbd",
                            PhotoPath = "tbd"
                        },
                        new
                        {
                            Id = new Guid("193c98e9-c95c-4753-89fe-058cdb68bfc6"),
                            DateOfBirth = new DateTime(1955, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "monic@nonexistentmail.com",
                            FirstName = "Monica",
                            LastName = "Bellucci",
                            PasswordHash = "tbd",
                            PhotoPath = "tbd"
                        },
                        new
                        {
                            Id = new Guid("98696623-e7cd-4dd5-81ad-c22d2a474430"),
                            DateOfBirth = new DateTime(1993, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "rntr@nonexistentmail.com",
                            FirstName = "Roman",
                            LastName = "NieTenRoman",
                            PasswordHash = "tbd",
                            PhotoPath = "tbd"
                        });
                });

            modelBuilder.Entity("Sprint.DAL.EFCore.Models.CourtReservation", b =>
                {
                    b.HasOne("Sprint.DAL.EFCore.Models.Court", "Court")
                        .WithMany("Reservations")
                        .HasForeignKey("CourtId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sprint.DAL.EFCore.Models.User", "User")
                        .WithMany("CourtReservations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Court");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Sprint.DAL.EFCore.Models.TrainerPhoto", b =>
                {
                    b.HasOne("Sprint.DAL.EFCore.Models.Trainer", "Trainer")
                        .WithMany("Photos")
                        .HasForeignKey("TrainerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trainer");
                });

            modelBuilder.Entity("Sprint.DAL.EFCore.Models.TrainerReservation", b =>
                {
                    b.HasOne("Sprint.DAL.EFCore.Models.CourtReservation", "CourtReservation")
                        .WithOne("TrainerReservation")
                        .HasForeignKey("Sprint.DAL.EFCore.Models.TrainerReservation", "CourtReservationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sprint.DAL.EFCore.Models.Trainer", "Trainer")
                        .WithMany("Reservations")
                        .HasForeignKey("TrainerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sprint.DAL.EFCore.Models.TrainerReview", "TrainerReview")
                        .WithMany()
                        .HasForeignKey("TrainerReviewId");

                    b.Navigation("CourtReservation");

                    b.Navigation("Trainer");

                    b.Navigation("TrainerReview");
                });

            modelBuilder.Entity("Sprint.DAL.EFCore.Models.Court", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("Sprint.DAL.EFCore.Models.CourtReservation", b =>
                {
                    b.Navigation("TrainerReservation");
                });

            modelBuilder.Entity("Sprint.DAL.EFCore.Models.Trainer", b =>
                {
                    b.Navigation("Photos");

                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("Sprint.DAL.EFCore.Models.User", b =>
                {
                    b.Navigation("CourtReservations");
                });
#pragma warning restore 612, 618
        }
    }
}
