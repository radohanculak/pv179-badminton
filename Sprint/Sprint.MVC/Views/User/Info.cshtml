@using Sprint.Common.Enums
@model Sprint.MVC.Models.User.UserInfoViewModel

<h4>User informations</h4>
<table class="table table-striped">
    <tbody>
    <tr>
        <td>Name</td>
        <td>@Model.User.FirstName @Model.User.LastName</td>
    </tr>
    
    <tr>
        <td>Email</td>
        <td>@Model.User.Email</td>
    </tr>
    
    <tr>
        <td>Age</td>
        <td>@Model.User.Age</td>
    </tr>
    
    <tr>
        <td>Photo</td>
        <td><img src="/@Model.User.PhotoPath" class="detailImage" /></td>
    </tr>
    
    @if (Model.User.Role == UserRole.Trainer)
    {
        <tr>
            <td>Trainer informations</td>
            <td>
                @using (Html.BeginForm("Delete", "Trainer", new { id = Model.User.Id }, FormMethod.Post, true, new { @class = "form-inline" }))
                {
                    <a class="btn btn-secondary my-1" href="@Url.Action("Info", "Trainer", new { id = Model.User.Trainer.Id })">See</a>
                }
            </td>
        </tr> 
    }

    </tbody>
</table>

@using (Html.BeginForm("Delete", "User", new { id = Model.User.Id }, FormMethod.Post, true, new { @class = "form-inline" }))
{
    <a class="btn btn-secondary my-1" href="@Url.Action("Edit", new { id = Model.User.Id })">Edit</a>
}

@using (Html.BeginForm("Delete", "Trainer", new { id = Model.User.Id }, FormMethod.Post, true, new { @class = "form-inline" }))
{
    <a class="btn btn-secondary my-1" href="@Url.Action("Reservations", new { id = Model.User.Id })">Reservations</a>
}